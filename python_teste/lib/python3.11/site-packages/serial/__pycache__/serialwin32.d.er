##[pylyzer] failed /home/tiago/pi/python_teste/lib/python3.11/site-packages/serial/serialwin32.py 1741337138 20284
.___v_desugar_1: Never
.absolute_import: Never
.ctypes: Never

.time: Never

.win32 = pyimport "win32"

.serial = pyimport "__init__"
.__init__ = pyimport "__init__"

.___v_desugar_2 = pyimport "serialutil"
.serialutil = pyimport "serialutil"
.SerialBase: {serial.serialutil.SerialBase}
.SerialException: {serial.serialutil.SerialException}
.to_bytes: |Type_252 <: Structural({.tobytes = (self: Obj) -> ?1647}), Type_1647: Type|(seq: Type_252) -> Never
.PortNotOpenError: {serial.serialutil.PortNotOpenError}
.SerialTimeoutException: {serial.serialutil.SerialTimeoutException}
.Serial: ClassType
.Serial <: serial.serialutil.SerialBase
.Serial._port_handle: Never
.Serial._overlapped_read: Never
.Serial._overlapped_write: Never
.Serial.__call__: (*args: Obj, **kwargs := Obj) -> serialwin32.Serial
.Serial.BAUDRATES: {Type_v_global_7222: global::Tuple([Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat]) | Type_v_global_7222 == (50, 75, 110, 134, 150, 200, 300, 600, ...)}
.Serial.open: (self: serialwin32.Serial) -> NoneType
.Serial._reconfigure_port: (self: serialwin32.Serial) -> NoneType
.Serial._close: (self: serialwin32.Serial) -> NoneType
.Serial.close: (self: serialwin32.Serial) -> NoneType
.Serial.in_waiting : (self: serialwin32.Serial) -> Never
.Serial.in_waiting: Never
.Serial.read: (self: serialwin32.Serial, size: Structural({.__gt__ = (self: Never, Obj) -> Bool}) := {1} and Structural({.__gt__ = (self: Never, Obj) -> Bool})) -> Never
.Serial.write: |Type_252 <: Structural({.tobytes = (self: Obj) -> ?1647}), Type_1647: Type|(self: serialwin32.Serial, data: Type_252) -> Never
.Serial.flush: (self: serialwin32.Serial) -> NoneType
.Serial.reset_input_buffer: (self: serialwin32.Serial) -> NoneType
.Serial.reset_output_buffer: (self: serialwin32.Serial) -> NoneType
.Serial._update_break_state: (self: serialwin32.Serial) -> NoneType
.Serial._update_rts_state: (self: serialwin32.Serial) -> NoneType
.Serial._update_dtr_state: (self: serialwin32.Serial) -> NoneType
.Serial._GetCommModemStatus: (self: serialwin32.Serial) -> Never
.Serial.cts : (self: serialwin32.Serial) -> {`&&`(.win32.MS_CTS_ON, .self._GetCommModemStatus()) in {Type_v_global_10436: Obj | Type_v_global_10436 != 0}}
.Serial.cts: {`&&`(.win32.MS_CTS_ON, .self._GetCommModemStatus()) in {Type_v_global_10436: Obj | Type_v_global_10436 != 0}}
.Serial.dsr : (self: serialwin32.Serial) -> {`&&`(.win32.MS_DSR_ON, .self._GetCommModemStatus()) in {Type_v_global_10450: Obj | Type_v_global_10450 != 0}}
.Serial.dsr: {`&&`(.win32.MS_DSR_ON, .self._GetCommModemStatus()) in {Type_v_global_10450: Obj | Type_v_global_10450 != 0}}
.Serial.ri : (self: serialwin32.Serial) -> {`&&`(.win32.MS_RING_ON, .self._GetCommModemStatus()) in {Type_v_global_10481: Obj | Type_v_global_10481 != 0}}
.Serial.ri: {`&&`(.win32.MS_RING_ON, .self._GetCommModemStatus()) in {Type_v_global_10481: Obj | Type_v_global_10481 != 0}}
.Serial.cd : (self: serialwin32.Serial) -> {`&&`(.win32.MS_RLSD_ON, .self._GetCommModemStatus()) in {Type_v_global_10492: Obj | Type_v_global_10492 != 0}}
.Serial.cd: {`&&`(.win32.MS_RLSD_ON, .self._GetCommModemStatus()) in {Type_v_global_10492: Obj | Type_v_global_10492 != 0}}
.Serial.set_buffer_size: |Type_7473: Type|(self: serialwin32.Serial, rx_size: {_: Type_7473 and NoneType | _ == None} := {_: Type_7473 and NoneType | _ == None}, tx_size: Type_7473 := Type_7473) -> NoneType
.Serial.set_output_flow_control: (self: serialwin32.Serial, enable: Bool := Bool) -> NoneType
.Serial.out_waiting : (self: serialwin32.Serial) -> Never
.Serial.out_waiting: Never
.Serial._cancel_overlapped_io: (self: serialwin32.Serial, overlapped: Obj) -> NoneType
.Serial.cancel_read: (self: serialwin32.Serial) -> NoneType
.Serial.cancel_write: (self: serialwin32.Serial) -> NoneType
.Serial.exclusive: (self: serialwin32.Serial, exclusive: Bool) -> NoneType

