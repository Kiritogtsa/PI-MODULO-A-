##[pylyzer] failed /home/tiago/pi/python_teste/lib/python3.11/site-packages/serial/serialutil.py 1741337138 21797
.___v_desugar_1: Never
.absolute_import: Never
.io: Never

.time: Never


.memoryview: ClassType



.unicode: {Str}


.basestring: global::Tuple([{Str}])

.iterbytes: |Type_1485: Type, Type_1507: Type, Type_1485 <: Structural({.tobytes = (self: Obj) -> ?1485; .__getitem__ = (self: Obj, ?1507) -> ?1508}), Type_1508: Type|(b: Type_1485) -> NoneType
.to_bytes: |Type_252 <: Structural({.tobytes = (self: Obj) -> ?1647}), Type_1647: Type|(seq: Type_252) -> Never
.XON: Never
.XOFF: Never
.CR: Never
.LF: Never
.___v_global_2691: global::Tuple([{"N"}, {"E"}, {"O"}, {"M"}, {"S"}])
.PARITY_NONE: Never
.PARITY_EVEN: Never
.PARITY_ODD: Never
.PARITY_MARK: Never
.PARITY_SPACE: Never

.___v_global_2692: global::Tuple([{1}, {1.5}, {2}])
.STOPBITS_ONE: Never
.STOPBITS_ONE_POINT_FIVE: Never
.STOPBITS_TWO: Never

.___v_global_2693: global::Tuple([{5}, {6}, {7}, {8}])
.FIVEBITS: Never
.SIXBITS: Never
.SEVENBITS: Never
.EIGHTBITS: Never

.PARITY_NAMES: Never
.SerialException: ClassType
.SerialException <: Never

.SerialTimeoutException: ClassType
serial = pyimport "serial"
.SerialTimeoutException <: serial.serialutil.SerialException

.PortNotOpenError: ClassType
.PortNotOpenError <: serial.serialutil.SerialException
.PortNotOpenError.__call__: () -> serial.serialutil.PortNotOpenError

.Timeout: ClassType
.Timeout <: Obj
.Timeout.is_infinite: Never
.Timeout.duration: Never
.Timeout.is_non_blocking: Never
.Timeout.__call__: (duration: Obj) -> serial.serialutil.Timeout
.Timeout.expired: (self: serial.serialutil.Timeout) -> {.self.target_time in {Type_v_global_4354: Obj | Type_v_global_4354 != None}} and {.self.time_left() in {Type_v_global_4355: Nat | (Type_v_global_4355 <= 0 or Type_v_global_4355 == 0)}}
.Timeout.time_left: (self: serial.serialutil.Timeout) -> Structural({.__le__ = (self: Never, Obj) -> Bool})
.Timeout.restart: (self: serial.serialutil.Timeout, duration: Obj) -> NoneType

.SerialBase: ClassType
.SerialBase <: Never
.SerialBase._exclusive: Never
.SerialBase.baudrate: Never
.SerialBase._write_timeout: Never
.SerialBase._bytesize: Never
.SerialBase._xonxoff: Never
.SerialBase.write_timeout: Never
.SerialBase.rtscts: Never
.SerialBase.portstr: Never
.SerialBase.timeout: Never
.SerialBase._baudrate: Never
.SerialBase._rtscts: Never
.SerialBase._timeout: Never
.SerialBase.inter_byte_timeout: Never
.SerialBase._dsrdtr: Never
.SerialBase._inter_byte_timeout: Never
.SerialBase._stopbits: Never
.SerialBase._parity: Never
.SerialBase._dtr_state: Never
.SerialBase._break_state: Never
.SerialBase.port: Never
.SerialBase.xonxoff: Never
.SerialBase.dsrdtr: Never
.SerialBase.stopbits: Never
.SerialBase.name: Never
.SerialBase.bytesize: Never
.SerialBase.is_open: Never
.SerialBase._rs485_mode: Never
.SerialBase.parity: Never
.SerialBase._rts_state: Never
.SerialBase.exclusive: Never
.SerialBase._port: Never
.SerialBase.__call__: (port: Obj := Obj, baudrate: Obj := Obj, bytesize: Obj := Obj, parity: Obj := Obj, stopbits: Obj := Obj, timeout: Obj := Obj, xonxoff: Obj := Obj, rtscts: Obj := Obj, write_timeout: Obj := Obj, dsrdtr: Obj := Obj, inter_byte_timeout: Obj := Obj, exclusive: Obj := Obj, **kwargs := Obj) -> serial.serialutil.SerialBase
.SerialBase.BAUDRATES: {Type_v_global_3171: global::Tuple([Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat, Nat]) | Type_v_global_3171 == (50, 75, 110, 134, 150, 200, 300, 600, ...)}
.SerialBase.BYTESIZES: Never
.SerialBase.PARITIES: Never
.SerialBase.STOPBITS: Never
.SerialBase.port : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.port: Never
.SerialBase.port: (self: serial.serialutil.SerialBase, port: Obj) -> NoneType
.SerialBase.baudrate : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.baudrate: Never
.SerialBase.baudrate: (self: serial.serialutil.SerialBase, baudrate: Obj) -> NoneType
.SerialBase.bytesize : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.bytesize: Never
.SerialBase.bytesize: (self: serial.serialutil.SerialBase, bytesize: Obj) -> NoneType
.SerialBase.exclusive : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.exclusive: Never
.SerialBase.exclusive: (self: serial.serialutil.SerialBase, exclusive: Obj) -> NoneType
.SerialBase.parity : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.parity: Never
.SerialBase.parity: (self: serial.serialutil.SerialBase, parity: Obj) -> NoneType
.SerialBase.stopbits : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.stopbits: Never
.SerialBase.stopbits: (self: serial.serialutil.SerialBase, stopbits: Obj) -> NoneType
.SerialBase.timeout : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.timeout: Never
.SerialBase.timeout: (self: serial.serialutil.SerialBase, timeout: Obj) -> NoneType
.SerialBase.write_timeout : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.write_timeout: Never
.SerialBase.write_timeout: (self: serial.serialutil.SerialBase, timeout: Obj) -> NoneType
.SerialBase.inter_byte_timeout : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.inter_byte_timeout: Never
.SerialBase.inter_byte_timeout: (self: serial.serialutil.SerialBase, ic_timeout: Obj) -> NoneType
.SerialBase.xonxoff : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.xonxoff: Never
.SerialBase.xonxoff: (self: serial.serialutil.SerialBase, xonxoff: Obj) -> NoneType
.SerialBase.rtscts : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.rtscts: Never
.SerialBase.rtscts: (self: serial.serialutil.SerialBase, rtscts: Obj) -> NoneType
.SerialBase.dsrdtr : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.dsrdtr: Never
.SerialBase.dsrdtr: (self: serial.serialutil.SerialBase, dsrdtr: Obj := Obj) -> NoneType
.SerialBase.rts : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.rts: Never
.SerialBase.rts: (self: serial.serialutil.SerialBase, value: Obj) -> NoneType
.SerialBase.dtr : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.dtr: Never
.SerialBase.dtr: (self: serial.serialutil.SerialBase, value: Obj) -> NoneType
.SerialBase.break_condition : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.break_condition: {False, True}
.SerialBase.break_condition: (self: serial.serialutil.SerialBase, value: Obj) -> NoneType
.SerialBase.rs485_mode : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.rs485_mode: Never
.SerialBase.rs485_mode: (self: serial.serialutil.SerialBase, rs485_settings: Obj) -> NoneType
.SerialBase._SAVED_SETTINGS: global::Tuple([{"baudrate"}, {"bytesize"}, {"parity"}, {"stopbits"}, {"xonxoff"}, {"dsrdtr"}, {"rtscts"}, {"timeout"}, {"write_timeout"}, {"inter_byte_timeout"}])
.SerialBase.get_settings: (self: serial.serialutil.SerialBase) -> global::Dict({Str: Obj})
.SerialBase.apply_settings: |R: Type, Type_1187 <: Structural({.__contains__ = (self: Never, ?R) -> Bool; .__getitem__ = (self: Obj, ?R) -> Obj and (self: Obj, ?R) -> ?4121}), Type_4121: Type|(self: serial.serialutil.SerialBase, d: Type_1187) -> NoneType
.SerialBase.__repr__: (self: serial.serialutil.SerialBase) -> Str
.SerialBase.readable: (self: serial.serialutil.SerialBase) -> {True}
.SerialBase.writable: (self: serial.serialutil.SerialBase) -> {True}
.SerialBase.seekable: (self: serial.serialutil.SerialBase) -> {False}
.SerialBase.readinto: |Type_4183: Type, Type_4168: Type, Type_4167: Type, Type_4169: Type, Type_4184: Type, Type_4182: Type, Type_1211 <: Structural({.__len__ = (self: Never) -> Nat; .__setitem__ = (self: Obj, ?4167, ?4168) -> ?4169 and (self: Obj, ?4182, ?4183) -> ?4184})|(self: serial.serialutil.SerialBase, b: Type_1211) -> Nat
.SerialBase.__enter__: (self: serial.serialutil.SerialBase) -> serial.serialutil.SerialBase
.SerialBase.__exit__: (self: serial.serialutil.SerialBase, *args: Obj, **kwargs := Obj) -> NoneType
.SerialBase.send_break: (self: serial.serialutil.SerialBase, duration: Obj := Obj) -> NoneType
.SerialBase.flushInput: (self: serial.serialutil.SerialBase) -> NoneType
.SerialBase.flushOutput: (self: serial.serialutil.SerialBase) -> NoneType
.SerialBase.inWaiting: (self: serial.serialutil.SerialBase) -> Never
.SerialBase.sendBreak: (self: serial.serialutil.SerialBase, duration: Obj := Obj) -> NoneType
.SerialBase.setRTS: (self: serial.serialutil.SerialBase, value: Obj := Obj) -> NoneType
.SerialBase.setDTR: (self: serial.serialutil.SerialBase, value: Obj := Obj) -> NoneType
.SerialBase.getCTS: (self: serial.serialutil.SerialBase) -> Never
.SerialBase.getDSR: (self: serial.serialutil.SerialBase) -> Never
.SerialBase.getRI: (self: serial.serialutil.SerialBase) -> Never
.SerialBase.getCD: (self: serial.serialutil.SerialBase) -> Never
.SerialBase.setPort: (self: serial.serialutil.SerialBase, port: Obj) -> NoneType
.SerialBase.writeTimeout : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.writeTimeout: Never
.SerialBase.writeTimeout: (self: serial.serialutil.SerialBase, timeout: Obj) -> NoneType
.SerialBase.interCharTimeout : (self: serial.serialutil.SerialBase) -> Never
.SerialBase.interCharTimeout: Never
.SerialBase.interCharTimeout: (self: serial.serialutil.SerialBase, interCharTimeout: Obj) -> NoneType
.SerialBase.getSettingsDict: (self: serial.serialutil.SerialBase) -> global::Dict({Str: Obj})
.SerialBase.applySettingsDict: |Type_1187 <: Structural({.__contains__ = (self: Never, ?R) -> Bool; .__getitem__ = (self: Obj, ?R) -> Obj and (self: Obj, ?R) -> ?Type_4121}), Type_4121: Type, R <: Str|(self: serial.serialutil.SerialBase, d: Type_1187) -> NoneType
.SerialBase.isOpen: (self: serial.serialutil.SerialBase) -> Never
.SerialBase.read_all: (self: serial.serialutil.SerialBase) -> Str
.SerialBase.read_until: Never
.SerialBase.iread_until: (self: serial.serialutil.SerialBase, *args: Obj, **kwargs := Obj) -> NoneType


.sys: Never

.s: serial.serialutil.SerialBase








