##[pylyzer] failed /home/tiago/pi/python_teste/lib/python3.11/site-packages/werkzeug/routing/converters.py 1741334495 7297
.___v_desugar_1: Never
.annotations: Never
.re: Never

.t: Never

.uuid: Never

.___v_desugar_2: Never
.quote: Never

.___v_desugar_3 = pyimport "map"
.map = pyimport "map"
.Map: Never


.ValidationError: ClassType
.ValidationError <: global::ValueError

.BaseConverter: ClassType
.BaseConverter.map: Never
.BaseConverter.__call__: (map: Obj, *args: Obj, **kwargs := Obj) -> converters.BaseConverter
.BaseConverter.regex: {"[^.]+"}
.BaseConverter.weight: {100}
.BaseConverter.part_isolating: {True}
.BaseConverter.__init_subclass__: |Type_25102 <: Structural({.regex = ?40466; .part_isolating = ?40455}), Type_40466: Type, Type_40455: Type|(cls: Type_25102, **kwargs := Obj) -> NoneType
.BaseConverter.to_python: (self: converters.BaseConverter, value: Str) -> Never
.BaseConverter.to_url: (self: converters.BaseConverter, value: Obj) -> Str

.UnicodeConverter: ClassType
converters = pyimport "converters"
.UnicodeConverter <: .BaseConverter
.UnicodeConverter.regex: Never
.UnicodeConverter.__call__: (map: Obj, minlength: Int := Int, maxlength: NoneType or Int := NoneType or Int, length: NoneType or Int := NoneType or Int) -> converters.UnicodeConverter

.AnyConverter: ClassType
.AnyConverter <: .BaseConverter
.AnyConverter.regex: Never
.AnyConverter.items: Never
.AnyConverter.__call__: (map: Obj, *items: Str) -> converters.AnyConverter
.AnyConverter.to_url: (self: converters.AnyConverter, value: Obj) -> Str

.PathConverter: ClassType
.PathConverter <: .BaseConverter
.PathConverter.part_isolating: {False}
.PathConverter.regex: {"[^.].*?"}
.PathConverter.weight: {200}

.NumberConverter: ClassType
.NumberConverter <: .BaseConverter
.NumberConverter.fixed_digits: Int
.NumberConverter.min: NoneType or Int
.NumberConverter.signed: Bool
.NumberConverter.max: NoneType or Int
.NumberConverter.__call__: (map: Obj, fixed_digits: Int := Int, min: NoneType or Int := NoneType or Int, max: NoneType or Int := NoneType or Int, signed: Bool := Bool) -> converters.NumberConverter
.NumberConverter.weight: {50}
.NumberConverter.num_convert: Never
.NumberConverter.to_python: (self: converters.NumberConverter, value: Str) -> Never
.NumberConverter.to_url: (self: converters.NumberConverter, value: Obj) -> Str
.NumberConverter.signed_regex : (self: converters.NumberConverter) -> Str
.NumberConverter.signed_regex: Str

.IntegerConverter: ClassType
.IntegerConverter <: .NumberConverter
.IntegerConverter.regex: {"\\d+"}

.FloatConverter: ClassType
.FloatConverter <: .NumberConverter
.FloatConverter.__call__: (map: Obj, min: Float or NoneType := Float or NoneType, max: Float or NoneType := Float or NoneType, signed: Bool := Bool) -> converters.FloatConverter
.FloatConverter.regex: {"\\d+\\.\\d+"}
.FloatConverter.num_convert: {Float}

.UUIDConverter: ClassType
.UUIDConverter <: .BaseConverter
.UUIDConverter.regex: {"[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"}
.UUIDConverter.to_python: (self: converters.UUIDConverter, value: Str) -> Never
.UUIDConverter.to_url: (self: converters.UUIDConverter, value: Obj) -> Str

.DEFAULT_CONVERTERS: Never
